{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,uEAAuB;;;;;;;;;;;;;;ACCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;AACU;AACY;;AAc9D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,kFAAiB;SAClB;mIAIU,SAAS,mBAVlB,2DAAY;QACZ,qEAAc,aAGd,uEAAa;QACb,kFAAiB;;;;;;;;;;;;;ACbrB;AAAA;AAAA;AAAA;AAAA;AAAkF;;;AAO3E,MAAM,cAAc;IAMzB;QAJA,eAAU,GAAG,6EAAU;QACvB,aAAQ,GAAG,2EAAQ;QACnB,YAAO,GAAG,0EAAO;IAED,CAAC;IAEjB,QAAQ;IAER,CAAC;;4EAVU,cAAc;8FAAd,cAAc;QCR3B,6EAAiC;QAI7B,yEAA0B;QACtB,yEAA0B;QACtB,yEAAwB;QACpB,oEAAsD;QACtD,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,yEAAiC;QAC7B,yEAAyB;QACrB,2EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,uEAAuB;QAC3B,4DAAM;QACN,0EAAyB;QACrB,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEAAuB;QAC3B,4DAAM;QACV,4DAAM;QACN,2EAA4B;QACxB,wEAAuB;QACvB,wEAAM;QAAA,6EAAiB;QAAA,4DAAO;QAClC,4DAAM;QACN,2EAAwB;QACpB,2EAAyB;QACrB,0EAAiD;QACrD,4DAAM;QACN,2EAAyB;QACrB,0EAA+C;QACnD,4DAAM;QACN,2EAAyB;QACrB,0EAA8C;QAClD,4DAAM;QACV,4DAAM;QACN,uEAAK;QAAA,8EAA2B;QAAA,gFAAoB;QAAA,4DAAS;QAAA,4DAAM;QACnE,yEAAqB;QAAA,sFAA0B;QAAA,4DAAI;QACnD,yEAAqB;QAAA,0EAAc;QAAA,4DAAI;QAC3C,4DAAM;QACV,4DAAM;QACN,sEAAiC;QACrC,4DAAM;QACV,4DAAU;;QAhBuB,2DAAmB;QAAnB,gFAAmB;QAGnB,0DAAiB;QAAjB,8EAAiB;QAGjB,0DAAgB;QAAhB,6EAAgB;;;;;;;;;;;;;;;;;;;;AC/BF;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'digimon-ui';\n}\n","<app-login></app-login>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { faApple, faFacebook, faGoogle } from '@fortawesome/free-brands-svg-icons'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  faFacebook = faFacebook\n  faGoogle = faGoogle\n  faApple = faApple\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<section class=\"login-container\">\n    <!-- First login view, this project is to show my UI/UX Skill and share code with my homies  -->\n    <!-- with no css frameworks or libs -->\n    <!-- Designed and maded by Kidbel (Victor Moreno) - thislayoutbuilder -->\n    <div class=\"main-wrapper\">\n        <div class=\"left-wrapper\">\n            <div class=\"login-card\">\n                <img src=\"assets/img/digi-logo.png\" class=\"digi-logo\">\n                <h1>Login</h1>\n                <div class=\"input-group-wrapper\">\n                    <div class=\"input-group\">\n                        <label for=\"username\">Username</label>\n                        <input name=\"username\">\n                    </div>\n                    <div class=\"input-group\">\n                        <label for=\"password\">Password</label>\n                        <input name=\"password\">\n                    </div>\n                </div>\n                <div class=\"stay-connected\">\n                    <input type=\"checkbox\">\n                    <span>Keep Me Logged In</span>\n                </div>\n                <div class=\"auth-login\">\n                    <div class=\"auth-square\">\n                        <fa-icon [icon]=\"faFacebook\" size=\"lg\"></fa-icon>\n                    </div>\n                    <div class=\"auth-square\">\n                        <fa-icon [icon]=\"faGoogle\" size=\"lg\"></fa-icon>\n                    </div>\n                    <div class=\"auth-square\">\n                        <fa-icon [icon]=\"faApple\" size=\"lg\"></fa-icon>\n                    </div>\n                </div>\n                <div><button class=\"submit-btn\">Access Digimon World</button></div>\n                <a class=\"login-opt\">Having Troubles to log in?</a>\n                <a class=\"login-opt\">Create Account</a>\n            </div>\n        </div>\n        <div class=\"right-wrapper\"></div>\n    </div>\n</section>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}